version: '3.8'

services:
  fastapi:
    build:
      context: .
      dockerfile: docker/Dockerfile.ficast  # The Dockerfile for the FastAPI app
    command: --host 0.0.0.0 --port 42110
    ports:
      - "${FASTAPI_PORT:-42110}:${FASTAPI_PORT:-42110}"
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    depends_on:
      - redis
      - celery_worker

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.ficast  
      # Reuse the same Dockerfile for Celery worker
    entrypoint: ["/app/celery-entrypoint.sh"]  # Use the new entrypoint script
    command: worker --loglevel=${CELERY_LOGLEVEL:-info} --pool=${CELERY_POOL:-solo}
    environment:
      - C_FORCE_ROOT=true  # Use with caution, enables root user in Celery.
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT:-6379}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT:-6379}/0
      - CELERY_CONCURRENCY=${CELERY_CONCURRENCY:-1}
    env_file:
      - .env
    depends_on:
      - redis
      - fastapi
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  redis:
    image: "redis:alpine"
    ports:
      - "${REDIS_PORT:-6379}:6379"
    env_file:
      - .env
      
networks:
  default:
    driver: bridge
